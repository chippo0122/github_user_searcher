{"version":3,"sources":["Component/Search/index.jsx","Component/Card/index.jsx","Component/List/index.jsx","Component/Loading/index.jsx","App.jsx","index.jsx"],"names":["Search","searchInput","React","createRef","keyUpSearch","e","code","search","page","value","current","url","props","setLoading","axios","get","then","res","data","incomplete_results","alert","users","items","total","Math","floor","total_count","sendUsers","catch","className","onKeyUp","this","ref","id","type","placeholder","onClick","Component","Card","user","href","html_url","target","rel","src","avatar_url","alt","login","List","makePages","currentPage","init","output","length","push","pop","map","el","stye","display","style","searchPage","classes","Loading","isLoading","App","state","newUsers","setState","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aae41ad.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './index.scss'\r\n\r\nexport default class Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-100 container-xl pt-5\">\r\n                <div className=\"w-100 d-flex justify-content-center\">\r\n                    <i className=\"fab fa-github display-1 icon-color\"></i>\r\n                </div>\r\n                <h1 className=\"text-center text-open display-3 text-light\">Github User Searcher</h1>\r\n                <div className=\"p-2 input-group\">\r\n                    <input onKeyUp={this.keyUpSearch} ref={this.searchInput} className=\"form-control text-center text-light search-input\" id=\"searchInput\" type=\"text\" placeholder=\"Search Users...\" />\r\n                    <button onClick={this.search(1)} className=\"btn-search btn text-light text-open fs-4\">Search</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    searchInput = React.createRef();\r\n\r\n    keyUpSearch = (e) => {\r\n        if (e.code === 'Enter') {\r\n            this.search(1)();\r\n        }\r\n    }\r\n\r\n    search = (page) => {\r\n        return () => {\r\n            const { value } = this.searchInput.current;\r\n            const perPage = 50;\r\n            const url = `https://api.github.com/search/users?q=${value};page=${page};per_page=${perPage}`;\r\n\r\n            if (!value) return\r\n            this.props.setLoading(true);\r\n            axios.get(url).then(res => {\r\n                if (!res.data.incomplete_results) {\r\n                    const users = res.data.items;\r\n                    let total = Math.floor(res.data.total_count / perPage) + 1;\r\n                    total = total > 20 ? 20 : total;\r\n                    this.props.sendUsers({ users, total, page, value });\r\n                    this.props.setLoading(false);\r\n                } else {\r\n                    alert('get data fail');\r\n                    this.props.setLoading(false);\r\n                }\r\n            }).catch(res => {\r\n                alert('request fail');\r\n                this.props.setLoading(false);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.scss'\r\n\r\nexport default class Card extends Component {\r\n    render() {\r\n        const {user} = this.props;\r\n        return (\r\n            <li className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                <div className=\"card search-card mx-auto\">\r\n                    <a className=\"w-100 d-block card-link\" href={user.html_url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <img src={user.avatar_url} className=\"img-top\" alt=\"no profile\" />\r\n                        <h3 className=\"text-open text-light py-2 card-title\">{user.login}</h3>\r\n                    </a>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Card from '../Card'\r\nimport axios from 'axios'\r\n\r\nimport './index.scss'\r\n\r\nexport default class List extends Component {\r\n    render() { \r\n        return (\r\n            <div className=\"container-xl\">\r\n                <ul className=\"row list-unstyled g-0\">\r\n                    {\r\n                        this.props.users.map(el => {\r\n                            return <Card user={el} key={el.id} />\r\n                        })\r\n                    }\r\n                    <p stye={{display: this.props.users.length < 1 ? 'block' : 'none'}} className=\"text-center text-light text-open fs-4\">No Users' Data...</p>\r\n                </ul>\r\n                <nav aria-label=\"Page navigation example\" style={{display: this.props.total <= 1 ? 'none' : 'block'}}>\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        <li className=\"page-item\">\r\n                            <button onClick={this.searchPage(1)} className=\"page-link text-open\" href=\"#\" aria-label=\"Previous\">\r\n                                First\r\n                            </button>\r\n                        </li>\r\n                        {\r\n                            this.makePages(this.props.currentPage).map(el => {\r\n                                let classes = 'page-item';\r\n                                if(el === this.props.currentPage) classes += ' page-active';\r\n                                if(el > this.props.total) classes = 'd-none';\r\n                                return <li className={classes} key={el}><button onClick={this.searchPage(el)} className=\"page-link\" href=\"#\">{el}</button></li>\r\n                            })\r\n                        }\r\n                        <li className=\"page-item\">\r\n                            <button onClick={this.searchPage(this.props.total)} className=\"page-link text-open\" href=\"#\" aria-label=\"Next\">\r\n                                Last\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    makePages = (currentPage)=> {\r\n        let init = currentPage - 2,\r\n            output = [];\r\n\r\n        if(init < 1) init = 1;\r\n        \r\n        while(output.length < 5) {\r\n            output.push(init);\r\n            init++;\r\n        }\r\n\r\n        while(output.length > this.props.total) {\r\n            output.pop()\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    searchPage(page) {\r\n        if(page < 0 || page > this.props.total) return;\r\n        return ()=> {\r\n            const {value} = this.props;\r\n            const perPage = 50;\r\n            const url = `https://api.github.com/search/users?q=${value};page=${page};per_page=${perPage}`;\r\n    \r\n            if(!value) return\r\n            this.props.setLoading(true);\r\n            axios.get(url).then(res => {\r\n                if(!res.data.incomplete_results) {\r\n                    const users = res.data.items,\r\n                          total = Math.floor(res.data.total_count / perPage) + 1;\r\n\r\n                    this.props.sendUsers({users, total, page, value});\r\n                    this.props.setLoading(false);\r\n                } else {\r\n                    alert('get data fail');\r\n                    this.props.setLoading(false);\r\n                }\r\n            }).catch(res => {\r\n                alert('request fail');\r\n                this.props.setLoading(false);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.scss'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading-wrap\" style={{display: this.props.isLoading ? 'flex' : 'none'}}>\r\n                <i className=\"fas fa-cog loading-gear\"></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Search from './Component/Search'\nimport List from './Component/List'\nimport Loading from './Component/Loading'\n\nimport './App.scss'\n\nexport default class App extends Component {\n  state = {\n    users: [],\n    total: 1,\n    currentPage: 1,\n    value: '',\n    isLoading: false\n  }\n\n  render() {\n    return (\n      <div>\n        <Loading isLoading={this.state.isLoading}/>\n        <Search sendUsers={this.sendUsers} setLoading={this.setLoading}/>\n        <List {...this.state}  sendUsers={this.sendUsers} setLoading={this.setLoading}/>\n        <footer>\n          <p className=\"text-open text-light text-center\">Made by Chippo19970122@gmail.com, 2021</p>\n          <a className=\"d-block text-center text-open\" href=\"https://github.com/chippo0122\" target=\"_blank\" rel=\"noreferrer\">My Github Page</a>\n        </footer>\n      </div>\n    )\n  }\n\n  sendUsers = (newUsers) => {\n    this.setState({users: newUsers.users, total: newUsers.total, currentPage: newUsers.page, value: newUsers.value});\n  }\n\n  setLoading = (status) => {\n    this.setState({isLoading: status})\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}